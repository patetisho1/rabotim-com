'use client'

import { useState, useEffect } from 'react'
import { Search, MapPin, Filter, X, SlidersHorizontal, Star, Clock, Zap, Bookmark, BookmarkCheck, Calendar } from 'lucide-react'
import toast from 'react-hot-toast'

interface SearchSectionProps {
  onSearch: (query: string, category: string, location: string, filters: any) => void
}

export default function SearchSection({ onSearch }: SearchSectionProps) {
  const [query, setQuery] = useState('')
  const [category, setCategory] = useState('')
  const [location, setLocation] = useState('')
  const [showAdvancedFilters, setShowAdvancedFilters] = useState(false)
  const [filters, setFilters] = useState({
    priceMin: '',
    priceMax: '',
    urgent: false,
    rating: '',
    datePosted: ''
  })
  const [showSaveSearchModal, setShowSaveSearchModal] = useState(false)
  const [searchName, setSearchName] = useState('')
  const [recentSearches, setRecentSearches] = useState<string[]>([])

  // –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∑–∞–ø–∞–∑–µ–Ω–∏ —Ñ–∏–ª—Ç—Ä–∏ –æ—Ç localStorage
  useEffect(() => {
    const savedFilters = localStorage.getItem('searchFilters')
    if (savedFilters) {
      const parsed = JSON.parse(savedFilters)
      setQuery(parsed.query || '')
      setCategory(parsed.category || '')
      setLocation(parsed.location || '')
      setFilters(parsed.filters || {})
    }

    // –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ —Ç—ä—Ä—Å–µ–Ω–∏—è
    const recent = JSON.parse(localStorage.getItem('recentSearches') || '[]')
    setRecentSearches(recent.slice(0, 5)) // –ü–æ–∫–∞–∑–≤–∞–º–µ —Å–∞–º–æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ 5
  }, [])

  // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ —Ñ–∏–ª—Ç—Ä–∏ –≤ localStorage
  const saveFilters = () => {
    const filtersToSave = {
      query,
      category,
      location,
      filters
    }
    localStorage.setItem('searchFilters', JSON.stringify(filtersToSave))
  }

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault()
    saveFilters()
    
    // –ó–∞–ø–∞–∑–≤–∞–Ω–µ –≤ –ø–æ—Å–ª–µ–¥–Ω–∏—Ç–µ —Ç—ä—Ä—Å–µ–Ω–∏—è
    if (query.trim()) {
      const recent = JSON.parse(localStorage.getItem('recentSearches') || '[]')
      const newRecent = [query.trim(), ...recent.filter((q: string) => q !== query.trim())].slice(0, 10)
      localStorage.setItem('recentSearches', JSON.stringify(newRecent))
      setRecentSearches(newRecent.slice(0, 5))
    }
    
    onSearch(query, category, location, filters)
  }

  const handleSaveSearch = () => {
    if (!searchName.trim()) {
      toast.error('–ú–æ–ª—è, –≤—ä–≤–µ–¥–µ—Ç–µ –∏–º–µ –∑–∞ —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ')
      return
    }

    const searchData = {
      id: Date.now().toString(),
      name: searchName.trim(),
      query,
      category,
      location,
      priceMin: filters.priceMin,
      priceMax: filters.priceMax,
      urgent: filters.urgent,
      rating: filters.rating,
      datePosted: filters.datePosted,
      createdAt: new Date().toISOString(),
      lastUsed: new Date().toISOString(),
      useCount: 1
    }

    const savedSearches = JSON.parse(localStorage.getItem('savedSearches') || '[]')
    savedSearches.push(searchData)
    localStorage.setItem('savedSearches', JSON.stringify(savedSearches))

    setSearchName('')
    setShowSaveSearchModal(false)
    toast.success('–¢—ä—Ä—Å–µ–Ω–µ—Ç–æ –µ –∑–∞–ø–∞–∑–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ')
  }

  const handleQuickFilter = (quickFilter: string) => {
    let newFilters = { ...filters }
    
    switch (quickFilter) {
      case 'urgent':
        newFilters.urgent = !filters.urgent
        break
      case 'today':
        newFilters.datePosted = filters.datePosted === 'today' ? '' : 'today'
        break
      case 'week':
        newFilters.datePosted = filters.datePosted === 'week' ? '' : 'week'
        break
      case 'highRating':
        newFilters.rating = filters.rating === '4' ? '' : '4'
        break
      case 'clear':
        newFilters = {
          priceMin: '',
          priceMax: '',
          urgent: false,
          rating: '',
          datePosted: ''
        }
        break
    }
    
    setFilters(newFilters)
  }

  const handleRecentSearchClick = (searchQuery: string) => {
    setQuery(searchQuery)
    onSearch(searchQuery, category, location, filters)
  }

  const clearSearch = () => {
    setQuery('')
    setCategory('')
    setLocation('')
    setFilters({
      priceMin: '',
      priceMax: '',
      urgent: false,
      rating: '',
      datePosted: ''
    })
    onSearch('', '', '', {})
  }

  const categories = [
    { value: '', label: '–í—Å–∏—á–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' },
    { value: 'repair', label: '–†–µ–º–æ–Ω—Ç', icon: 'üîß' },
    { value: 'cleaning', label: '–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ', icon: 'üßπ' },
    { value: 'care', label: '–ì—Ä–∏–∂–∞', icon: 'üë•' },
    { value: 'delivery', label: '–î–æ—Å—Ç–∞–≤–∫–∞', icon: 'üì¶' },
    { value: 'moving', label: '–ü—Ä–µ–º–µ—Å—Ç–≤–∞–Ω–µ', icon: 'üöö' },
    { value: 'garden', label: '–ì—Ä–∞–¥–∏–Ω–∞—Ä—Å—Ç–≤–æ', icon: 'üå±' },
    { value: 'dog-care', label: '–†–∞–∑—Ö–æ–¥–∫–∞/–≥—Ä–∏–∂–∞ –∑–∞ –∫—É—á–µ', icon: 'üêï' },
    { value: 'packaging', label: '–û–ø–∞–∫–æ–≤–∞–Ω–µ', icon: 'üì¶' },
    { value: 'other', label: '–î—Ä—É–≥–æ', icon: 'üìã' },
  ]

  const locations = [
    { value: '', label: '–í—Å–∏—á–∫–∏ –ª–æ–∫–∞—Ü–∏–∏' },
    { value: 'sofia', label: '–°–æ—Ñ–∏—è' },
    { value: 'plovdiv', label: '–ü–ª–æ–≤–¥–∏–≤' },
    { value: 'varna', label: '–í–∞—Ä–Ω–∞' },
    { value: 'burgas', label: '–ë—É—Ä–≥–∞—Å' },
    { value: 'ruse', label: '–†—É—Å–µ' },
    { value: 'stara-zagora', label: '–°—Ç–∞—Ä–∞ –ó–∞–≥–æ—Ä–∞' },
    { value: 'pleven', label: '–ü–ª–µ–≤–µ–Ω' },
    { value: 'sliven', label: '–°–ª–∏–≤–µ–Ω' },
    { value: 'dobrich', label: '–î–æ–±—Ä–∏—á' },
    { value: 'shumen', label: '–®—É–º–µ–Ω' },
    { value: 'pernik', label: '–ü–µ—Ä–Ω–∏–∫' },
    { value: 'haskovo', label: '–•–∞—Å–∫–æ–≤–æ' },
    { value: 'yambol', label: '–Ø–º–±–æ–ª' },
    { value: 'pazardzhik', label: '–ü–∞–∑–∞—Ä–¥–∂–∏–∫' },
    { value: 'blagoevgrad', label: '–ë–ª–∞–≥–æ–µ–≤–≥—Ä–∞–¥' },
    { value: 'veliko-tarnovo', label: '–í–µ–ª–∏–∫–æ –¢—ä—Ä–Ω–æ–≤–æ' },
    { value: 'vratsa', label: '–í—Ä–∞—Ü–∞' },
    { value: 'gabrovo', label: '–ì–∞–±—Ä–æ–≤–æ' },
    { value: 'vidin', label: '–í–∏–¥–∏–Ω' },
    { value: 'kardzhali', label: '–ö—ä—Ä–¥–∂–∞–ª–∏' },
    { value: 'kyustendil', label: '–ö—é—Å—Ç–µ–Ω–¥–∏–ª' },
    { value: 'montana', label: '–ú–æ–Ω—Ç–∞–Ω–∞' },
    { value: 'lovech', label: '–õ–æ–≤–µ—á' },
    { value: 'razgrad', label: '–†–∞–∑–≥—Ä–∞–¥' },
    { value: 'silistra', label: '–°–∏–ª–∏—Å—Ç—Ä–∞' },
    { value: 'targovishte', label: '–¢—ä—Ä–≥–æ–≤–∏—â–µ' },
    { value: 'smolyan', label: '–°–º–æ–ª—è–Ω' },
    { value: 'petrich', label: '–ü–µ—Ç—Ä–∏—á' },
    { value: 'sandanski', label: '–°–∞–Ω–¥–∞–Ω—Å–∫–∏' },
    { value: 'gotse-delchev', label: '–ì–æ—Ü–µ –î–µ–ª—á–µ–≤' },
    { value: 'razlog', label: '–†–∞–∑–ª–æ–≥' },
    { value: 'bansko', label: '–ë–∞–Ω—Å–∫–æ' },
    { value: 'samokov', label: '–°–∞–º–æ–∫–æ–≤' },
    { value: 'svoge', label: '–°–≤–æ–≥–µ' },
    { value: 'radomir', label: '–†–∞–¥–æ–º–∏—Ä' },
    { value: 'breznik', label: '–ë—Ä–µ–∑–Ω–∏–∫' },
    { value: 'tran', label: '–¢—Ä—ä–Ω' },
    { value: 'kostenets', label: '–ö–æ—Å—Ç–µ–Ω–µ—Ü' },
    { value: 'ikhtiman', label: '–ò—Ö—Ç–∏–º–∞–Ω' },
    { value: 'elhin', label: '–ï–ª–∏–Ω –ü–µ–ª–∏–Ω' },
    { value: 'mirkovo', label: '–ú–∏—Ä–∫–æ–≤–æ' },
    { value: 'dolna-banya', label: '–î–æ–ª–Ω–∞ –±–∞–Ω—è' },
    { value: 'antony', label: '–ê–Ω—Ç–æ–Ω' },
    { value: 'zlatitsa', label: '–ó–ª–∞—Ç–∏—Ü–∞' },
    { value: 'pirdop', label: '–ü–∏—Ä–¥–æ–ø' },
    { value: 'koprivshtitsa', label: '–ö–æ–ø—Ä–∏–≤—â–∏—Ü–∞' },
    { value: 'panagyurishte', label: '–ü–∞–Ω–∞–≥—é—Ä–∏—â–µ' },
    { value: 'strelcha', label: '–°—Ç—Ä–µ–ª—á–∞' },
    { value: 'lesichovo', label: '–õ–µ—Å–∏—á–æ–≤–æ' },
    { value: 'kaloyanovo', label: '–ö–∞–ª–æ—è–Ω–æ–≤–æ' },
    { value: 'saedinenie', label: '–°—ä–µ–¥–∏–Ω–µ–Ω–∏–µ' },
    { value: 'bratsigovo', label: '–ë—Ä–∞—Ü–∏–≥–æ–≤–æ' },
    { value: 'krichim', label: '–ö—Ä–∏—á–∏–º' },
    { value: 'perushtitsa', label: '–ü–µ—Ä—É—â–∏—Ü–∞' },
    { value: 'sadovo', label: '–°–∞–¥–æ–≤–æ' },
    { value: 'parvomay', label: '–ü—ä—Ä–≤–æ–º–∞–π' },
    { value: 'kuklen', label: '–ö—É–∫–ª–µ–Ω' },
    { value: 'rodopi', label: '–†–æ–¥–æ–ø–∏' },
    { value: 'maritsa', label: '–ú–∞—Ä–∏—Ü–∞' },
  ]

  const quickFilters = [
    { key: 'urgent', label: '–°–ø–µ—à–Ω–∏', icon: Zap, active: filters.urgent },
    { key: 'today', label: '–î–Ω–µ—Å', icon: Clock, active: filters.datePosted === 'today' },
    { key: 'week', label: '–¢–∞–∑–∏ —Å–µ–¥–º–∏—Ü–∞', icon: Clock, active: filters.datePosted === 'week' },
    { key: 'highRating', label: '–í–∏—Å–æ–∫ —Ä–µ–π—Ç–∏–Ω–≥', icon: Star, active: filters.rating === '4' },
    { key: 'lowPrice', label: '–î–æ 50–ª–≤', icon: MapPin, active: filters.priceMax === '50' },
  ]

  const hasActiveFilters = query || category || location || 
    filters.priceMin || filters.priceMax || filters.urgent || 
    filters.rating || filters.datePosted

  return (
    <div className="bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-16 z-40">
      <div className="max-w-6xl mx-auto px-4 py-4">
        {/* Main Search Form - Mobile Optimized */}
        <form onSubmit={handleSubmit} className="space-y-4">
          {/* Search Input - Full Width Mobile */}
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 h-5 w-5" />
            <input
              type="text"
              placeholder="–¢—ä—Ä—Å–∏ –∑–∞–¥–∞—á–∏, —É—Å–ª—É–≥–∏, —É–º–µ–Ω–∏—è..."
              value={query}
              onChange={(e) => setQuery(e.target.value)}
              className="w-full pl-10 pr-12 py-3 sm:py-4 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white text-base sm:text-lg"
            />
            {query && (
              <button
                type="button"
                onClick={() => setQuery('')}
                className="absolute right-3 top-1/2 transform -translate-y-1/2 text-gray-400 hover:text-gray-600"
              >
                <X size={20} />
              </button>
            )}
          </div>

          {/* Filter Chips - Mobile Optimized */}
          <div className="flex flex-wrap gap-2">
            <button
              type="button"
              onClick={() => handleQuickFilter('urgent')}
              className={`inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm font-medium transition-colors min-h-[40px] touch-manipulation ${
                filters.urgent
                  ? 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-400'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
              }`}
            >
              <Zap size={14} />
              –°–ø–µ—à–Ω–æ
            </button>
            
            <button
              type="button"
              onClick={() => handleQuickFilter('today')}
              className={`inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm font-medium transition-colors min-h-[40px] touch-manipulation ${
                filters.datePosted === 'today'
                  ? 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-400'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
              }`}
            >
              <Clock size={14} />
              –î–Ω–µ—Å
            </button>
            
            <button
              type="button"
              onClick={() => handleQuickFilter('week')}
              className={`inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm font-medium transition-colors min-h-[40px] touch-manipulation ${
                filters.datePosted === 'week'
                  ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-400'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
              }`}
            >
              <Calendar size={14} />
              –¢–∞–∑–∏ —Å–µ–¥–º–∏—Ü–∞
            </button>
            
            <button
              type="button"
              onClick={() => handleQuickFilter('highRating')}
              className={`inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm font-medium transition-colors min-h-[40px] touch-manipulation ${
                filters.rating === '4'
                  ? 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-400'
                  : 'bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600'
              }`}
            >
              <Star size={14} />
              4+ –∑–≤–µ–∑–¥–∏
            </button>
            
            {(filters.urgent || filters.datePosted || filters.rating) && (
              <button
                type="button"
                onClick={() => handleQuickFilter('clear')}
                className="inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm font-medium bg-gray-200 text-gray-700 hover:bg-gray-300 dark:bg-gray-600 dark:text-gray-300 dark:hover:bg-gray-500 transition-colors min-h-[40px] touch-manipulation"
              >
                <X size={14} />
                –ò–∑—á–∏—Å—Ç–∏
              </button>
            )}
          </div>

          {/* Recent Searches - Mobile Optimized */}
          {recentSearches.length > 0 && !query && (
            <div className="space-y-2">
              <h4 className="text-sm font-medium text-gray-700 dark:text-gray-300">–ü–æ—Å–ª–µ–¥–Ω–∏ —Ç—ä—Ä—Å–µ–Ω–∏—è:</h4>
              <div className="flex flex-wrap gap-2">
                {recentSearches.map((search, index) => (
                  <button
                    key={index}
                    type="button"
                    onClick={() => handleRecentSearchClick(search)}
                    className="inline-flex items-center gap-1 px-3 py-2 rounded-full text-sm bg-gray-100 text-gray-700 hover:bg-gray-200 dark:bg-gray-700 dark:text-gray-300 dark:hover:bg-gray-600 transition-colors min-h-[40px] touch-manipulation"
                  >
                    <Search size={14} />
                    {search}
                  </button>
                ))}
              </div>
            </div>
          )}

          {/* Advanced Filters Toggle - Mobile Optimized */}
          <div className="flex items-center justify-between">
            <button
              type="button"
              onClick={() => setShowAdvancedFilters(!showAdvancedFilters)}
              className="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-gray-100 transition-colors min-h-[44px] touch-manipulation"
            >
              <SlidersHorizontal size={16} />
              –†–∞–∑—à–∏—Ä–µ–Ω–∏ —Ñ–∏–ª—Ç—Ä–∏
            </button>
            
            <button
              type="button"
              onClick={clearSearch}
              className="text-sm text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors min-h-[44px] px-3 touch-manipulation"
            >
              –ò–∑—á–∏—Å—Ç–∏ –≤—Å–∏—á–∫–æ
            </button>
          </div>

          {/* Advanced Filters - Mobile Optimized */}
          {showAdvancedFilters && (
            <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg">
              {/* Category Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –ö–∞—Ç–µ–≥–æ—Ä–∏—è
                </label>
                <select
                  value={category}
                  onChange={(e) => setCategory(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white text-sm"
                >
                  <option value="">–í—Å–∏—á–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</option>
                  <option value="cleaning">–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ</option>
                  <option value="handyman">–ú–∞–π—Å—Ç–æ—Ä—Å–∫–∏ —É—Å–ª—É–≥–∏</option>
                  <option value="transport">–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç</option>
                  <option value="design">–î–∏–∑–∞–π–Ω</option>
                  <option value="education">–û–±—É—á–µ–Ω–∏–µ</option>
                  <option value="it">IT —É—Å–ª—É–≥–∏</option>
                  <option value="gardening">–ì—Ä–∞–¥–∏–Ω–∞—Ä—Å—Ç–≤–æ</option>
                </select>
              </div>

              {/* Location Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –õ–æ–∫–∞—Ü–∏—è
                </label>
                <select
                  value={location}
                  onChange={(e) => setLocation(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white text-sm"
                >
                  <option value="">–í—Å–∏—á–∫–∏ –ª–æ–∫–∞—Ü–∏–∏</option>
                  <option value="sofia">–°–æ—Ñ–∏—è</option>
                  <option value="plovdiv">–ü–ª–æ–≤–¥–∏–≤</option>
                  <option value="varna">–í–∞—Ä–Ω–∞</option>
                  <option value="burgas">–ë—É—Ä–≥–∞—Å</option>
                  <option value="ruse">–†—É—Å–µ</option>
                </select>
              </div>

              {/* Price Range */}
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –¶–µ–Ω–∞ (–ª–≤)
                </label>
                <div className="flex gap-2">
                  <input
                    type="number"
                    placeholder="–û—Ç"
                    value={filters.priceMin}
                    onChange={(e) => setFilters({ ...filters, priceMin: e.target.value })}
                    className="flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white text-sm"
                  />
                  <input
                    type="number"
                    placeholder="–î–æ"
                    value={filters.priceMax}
                    onChange={(e) => setFilters({ ...filters, priceMax: e.target.value })}
                    className="flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white text-sm"
                  />
                </div>
              </div>

              {/* Rating Filter */}
              <div>
                <label className="block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2">
                  –ú–∏–Ω–∏–º–∞–ª–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥
                </label>
                <select
                  value={filters.rating}
                  onChange={(e) => setFilters({ ...filters, rating: e.target.value })}
                  className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white text-sm"
                >
                  <option value="">–í—Å–∏—á–∫–∏</option>
                  <option value="4">4+ –∑–≤–µ–∑–¥–∏</option>
                  <option value="4.5">4.5+ –∑–≤–µ–∑–¥–∏</option>
                  <option value="5">5 –∑–≤–µ–∑–¥–∏</option>
                </select>
              </div>
            </div>
          )}

          {/* Search Button - Mobile Optimized */}
          <button
            type="submit"
            className="w-full bg-blue-600 hover:bg-blue-700 active:bg-blue-800 text-white py-3 sm:py-4 rounded-lg font-medium transition-all duration-200 shadow-sm hover:shadow-md min-h-[48px] touch-manipulation"
          >
            –¢—ä—Ä—Å–∏ –∑–∞–¥–∞—á–∏
          </button>
        </form>
      </div>

      {/* Save Search Modal */}
      {showSaveSearchModal && (
        <div className="fixed inset-0 bg-black bg-opacity-50 z-50 flex items-center justify-center p-4">
          <div className="bg-white dark:bg-gray-800 rounded-lg p-6 max-w-sm w-full">
            <h3 className="text-lg font-semibold mb-4">–ó–∞–ø–∞–∑–∏ —Ç—ä—Ä—Å–µ–Ω–µ</h3>
            <input
              type="text"
              placeholder="–ò–º–µ –Ω–∞ —Ç—ä—Ä—Å–µ–Ω–µ—Ç–æ"
              value={searchName}
              onChange={(e) => setSearchName(e.target.value)}
              className="w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-600 dark:text-white mb-4"
            />
            <div className="flex gap-2">
              <button
                onClick={handleSaveSearch}
                className="flex-1 bg-blue-600 hover:bg-blue-700 text-white py-2 px-4 rounded-lg font-medium transition-colors"
              >
                –ó–∞–ø–∞–∑–∏
              </button>
              <button
                onClick={() => setShowSaveSearchModal(false)}
                className="flex-1 bg-gray-200 hover:bg-gray-300 text-gray-800 py-2 px-4 rounded-lg font-medium transition-colors"
              >
                –û—Ç–∫–∞–∑
              </button>
            </div>
          </div>
        </div>
      )}
    </div>
  )
} 