'use client'

import { useState, useEffect } from 'react'
import { Star, Quote, ChevronLeft, ChevronRight, CheckCircle } from 'lucide-react'
import { useRouter } from 'next/navigation'

interface Testimonial {
  id: string
  name: string
  avatar: string
  role: 'task_giver' | 'task_executor'
  rating: number
  text: string
  task: string
  earnings?: string
  timeframe?: string
  verified: boolean
}

const testimonials: Testimonial[] = [
  {
    id: '1',
    name: '–ú–∞—Ä–∏—è –ò–≤–∞–Ω–æ–≤–∞',
    avatar: 'https://images.unsplash.com/photo-1494790108755-2616b612b786?w=100&h=100&fit=crop&crop=face',
    role: 'task_giver',
    rating: 5,
    text: '–ù–∞–º–µ—Ä–∏—Ö –ø–µ—Ä—Ñ–µ–∫—Ç–Ω–∏—è —á–æ–≤–µ–∫ –∑–∞ –ø–æ—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç–∞ –∑–∞ 10 –º–∏–Ω—É—Ç–∏! –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ç–∞ –µ –∏–∑–∫–ª—é—á–∏—Ç–µ–ª–Ω–æ –ª–µ—Å–Ω–∞ –∑–∞ –∏–∑–ø–æ–ª–∑–≤–∞–Ω–µ –∏ –∫–∞—á–µ—Å—Ç–≤–æ—Ç–æ –Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç–∞ –±–µ—à–µ –æ—Ç–ª–∏—á–Ω–æ.',
    task: '–ü–æ—á–∏—Å—Ç–≤–∞–Ω–µ –Ω–∞ –∞–ø–∞—Ä—Ç–∞–º–µ–Ω—Ç',
    timeframe: '10 –º–∏–Ω—É—Ç–∏',
    verified: true
  },
  {
    id: '2',
    name: '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤',
    avatar: 'https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=100&h=100&fit=crop&crop=face',
    role: 'task_executor',
    rating: 5,
    text: '–ó–∞ –Ω—è–∫–æ–ª–∫–æ —á–∞—Å–∞ –∏–∑–∫–∞—Ä–∞—Ö 150 –ª–≤! Rabotim.com –º–∏ –ø–æ–º–æ–≥–Ω–∞ –¥–∞ —Å–∏ –æ—Å–∏–≥—É—Ä—è –¥–æ–ø—ä–ª–Ω–∏—Ç–µ–ª–µ–Ω –¥–æ—Ö–æ–¥ –ø–æ —É–¥–æ–±–µ–Ω –Ω–∞—á–∏–Ω. –ü—Ä–µ–ø–æ—Ä—ä—á–≤–∞–º –Ω–∞ –≤—Å–∏—á–∫–∏!',
    task: '–†–µ–º–æ–Ω—Ç –Ω–∞ –∫—É—Ö–Ω—è',
    earnings: '150 –ª–≤',
    timeframe: '–Ω—è–∫–æ–ª–∫–æ —á–∞—Å–∞',
    verified: true
  },
  {
    id: '3',
    name: '–ï–ª–µ–Ω–∞ –ì–µ–æ—Ä–≥–∏–µ–≤–∞',
    avatar: 'https://images.unsplash.com/photo-1438761681033-6461ffad8d80?w=100&h=100&fit=crop&crop=face',
    role: 'task_executor',
    rating: 5,
    text: '–ö–∞—Ç–æ —Å—Ç—É–¥–µ–Ω—Ç–∫–∞, Rabotim –º–∏ –¥–∞–≤–∞ –≤—ä–∑–º–æ–∂–Ω–æ—Å—Ç –¥–∞ —Ä–∞–±–æ—Ç—è –≥—ä–≤–∫–∞–≤–æ –∏ –¥–∞ —Å–∏ –∏–∑–∫–∞—Ä–≤–∞–º –¥–∂–æ–±–Ω–∏ –ø–∞—Ä–∏. –ù–∞–º–∏—Ä–∞–º –∑–∞–¥–∞—á–∏ –≤—Å–µ–∫–∏ –¥–µ–Ω!',
    task: '–û–±—É—á–µ–Ω–∏–µ –ø–æ –∞–Ω–≥–ª–∏–π—Å–∫–∏',
    earnings: '200+ –ª–≤/—Å–µ–¥–º–∏—Ü–∞',
    timeframe: '–≥—ä–≤–∫–∞–≤–æ',
    verified: true
  },
  {
    id: '4',
    name: '–ì–µ–æ—Ä–≥–∏ –î–∏–º–∏—Ç—Ä–æ–≤',
    avatar: 'https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=100&h=100&fit=crop&crop=face',
    role: 'task_giver',
    rating: 5,
    text: '–°–ø–µ—à–Ω–æ –º–∏ —Ç—Ä—è–±–≤–∞—à–µ –≤–æ–¥–æ–ø—Ä–æ–≤–æ–¥—á–∏–∫ –∏ –Ω–∞–º–µ—Ä–∏—Ö –ø—Ä–æ—Ñ–µ—Å–∏–æ–Ω–∞–ª–∏—Å—Ç –∑–∞ 20 –º–∏–Ω—É—Ç–∏. –¶–µ–Ω–∏—Ç–µ —Å–∞ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–∏ –∏ –∫–æ–º—É–Ω–∏–∫–∞—Ü–∏—è—Ç–∞ –µ –ª–µ—Å–Ω–∞.',
    task: '–†–µ–º–æ–Ω—Ç –Ω–∞ —Ç–µ—á–∞—â –∫—Ä–∞–Ω',
    timeframe: '20 –º–∏–Ω—É—Ç–∏',
    verified: true
  },
  {
    id: '5',
    name: '–ê–Ω–Ω–∞ –°—Ç–æ—è–Ω–æ–≤–∞',
    avatar: 'https://images.unsplash.com/photo-1534528741775-53994a69daeb?w=100&h=100&fit=crop&crop=face',
    role: 'task_executor',
    rating: 5,
    text: '–†–∞–±–æ—Ç—è –∫–∞—Ç–æ —Ñ—Ä–∏–π–ª–∞–Ω—Å—ä—Ä –∏ Rabotim –º–∏ –Ω–æ—Å–∏ –ø–æ—Å—Ç–æ—è–Ω–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∏. –†–µ–π—Ç–∏–Ω–≥ —Å–∏—Å—Ç–µ–º–∞—Ç–∞ —Ä–∞–±–æ—Ç–∏ –æ—Ç–ª–∏—á–Ω–æ –∏ –ø—Ä–∏–≤–ª–∏—á–∞ –∫–∞—á–µ—Å—Ç–≤–µ–Ω–∏ –ø–æ—Ä—ä—á–∫–∏.',
    task: '–ì—Ä–∞—Ñ–∏—á–µ–Ω –¥–∏–∑–∞–π–Ω',
    earnings: '500+ –ª–≤/–º–µ—Å–µ—Ü',
    timeframe: '—Ä–µ–¥–æ–≤–Ω–æ',
    verified: true
  },
  {
    id: '6',
    name: '–ü–µ—Ç—ä—Ä –ù–∏–∫–æ–ª–æ–≤',
    avatar: 'https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=100&h=100&fit=crop&crop=face',
    role: 'task_giver',
    rating: 5,
    text: '–û—Ç–ª–∏—á–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞! –ù–∞–º–µ—Ä–∏—Ö –Ω–∞–¥–µ–∂–¥–µ–Ω –≥—Ä–∞–¥–∏–Ω–∞—Ä, –∫–æ–π—Ç–æ —Å–µ –≥—Ä–∏–∂–∏ –∑–∞ –¥–≤–æ—Ä–∞ –º–∏ –≤—Å—è–∫–∞ —Å–µ–¥–º–∏—Ü–∞. –ú–Ω–æ–≥–æ —Å—ä–º –¥–æ–≤–æ–ª–µ–Ω –æ—Ç —Å–µ—Ä–≤–∏–∑–∞.',
    task: '–ì—Ä–∞–¥–∏–Ω–∞—Ä—Å—Ç–≤–æ',
    timeframe: '—Ä–µ–¥–æ–≤–Ω–æ',
    verified: true
  }
]

export default function TestimonialsSection() {
  const router = useRouter()
  const [currentIndex, setCurrentIndex] = useState(0)
  const [isAutoPlaying, setIsAutoPlaying] = useState(true)

  // Auto-play carousel
  useEffect(() => {
    if (!isAutoPlaying) return

    const interval = setInterval(() => {
      setCurrentIndex((prev) => (prev + 1) % testimonials.length)
    }, 5000)

    return () => clearInterval(interval)
  }, [isAutoPlaying])

  const goToNext = () => {
    setCurrentIndex((prev) => (prev + 1) % testimonials.length)
    setIsAutoPlaying(false)
  }

  const goToPrev = () => {
    setCurrentIndex((prev) => (prev - 1 + testimonials.length) % testimonials.length)
    setIsAutoPlaying(false)
  }

  const goToSlide = (index: number) => {
    setCurrentIndex(index)
    setIsAutoPlaying(false)
  }

  const getRoleLabel = (role: 'task_giver' | 'task_executor') => {
    return role === 'task_giver' ? '–†–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª' : '–ò–∑–ø—ä–ª–Ω–∏—Ç–µ–ª'
  }

  const getRoleBadgeColor = (role: 'task_giver' | 'task_executor') => {
    return role === 'task_giver' 
      ? 'bg-purple-100 text-purple-800 dark:bg-purple-900/30 dark:text-purple-400'
      : 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400'
  }

  return (
    <section className="py-16 sm:py-20 bg-gradient-to-b from-white to-gray-50 dark:from-gray-900 dark:to-gray-800">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        {/* Header */}
        <div className="text-center mb-12">
          <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 dark:text-gray-100 mb-4">
            –ö–∞–∫–≤–æ –∫–∞–∑–≤–∞—Ç –Ω–∞—à–∏—Ç–µ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
          </h2>
          <p className="text-lg text-gray-600 dark:text-gray-400 max-w-2xl mx-auto">
            –•–∏–ª—è–¥–∏ –¥–æ–≤–æ–ª–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏ –≤–µ—á–µ –∏–∑–ø–æ–ª–∑–≤–∞—Ç Rabotim.com –∑–∞ –Ω–∞–º–∏—Ä–∞–Ω–µ –Ω–∞ —Ä–∞–±–æ—Ç–∞ –∏ –∏–∑–ø—ä–ª–Ω–∏—Ç–µ–ª–∏
          </p>
        </div>

        {/* Carousel */}
        <div className="relative max-w-4xl mx-auto mb-12">
          {/* Main testimonial */}
          <div className="bg-white dark:bg-gray-800 rounded-2xl shadow-xl border border-gray-200 dark:border-gray-700 p-8 sm:p-12 relative overflow-hidden">
            {/* Quote icon */}
            <div className="absolute top-6 right-6 opacity-10">
              <Quote size={80} className="text-blue-600" />
            </div>

            {/* Content */}
            <div className="relative z-10">
              {/* User info */}
              <div className="flex items-center gap-4 mb-6">
                <img
                  src={testimonials[currentIndex].avatar}
                  alt={testimonials[currentIndex].name}
                  className="w-16 h-16 sm:w-20 sm:h-20 rounded-full object-cover border-4 border-blue-100 dark:border-blue-900"
                />
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <h3 className="text-xl font-bold text-gray-900 dark:text-gray-100">
                      {testimonials[currentIndex].name}
                    </h3>
                    {testimonials[currentIndex].verified && (
                      <CheckCircle className="h-5 w-5 text-blue-600" />
                    )}
                  </div>
                  <div className="flex items-center gap-2 flex-wrap">
                    <span className={`px-3 py-1 rounded-full text-xs font-medium ${getRoleBadgeColor(testimonials[currentIndex].role)}`}>
                      {getRoleLabel(testimonials[currentIndex].role)}
                    </span>
                    <div className="flex items-center gap-1">
                      {[...Array(5)].map((_, i) => (
                        <Star
                          key={i}
                          size={16}
                          className={`${
                            i < testimonials[currentIndex].rating
                              ? 'text-yellow-500 fill-current'
                              : 'text-gray-300'
                          }`}
                        />
                      ))}
                    </div>
                  </div>
                </div>
              </div>

              {/* Testimonial text */}
              <blockquote className="text-lg sm:text-xl text-gray-700 dark:text-gray-300 leading-relaxed mb-6">
                "{testimonials[currentIndex].text}"
              </blockquote>

              {/* Task info */}
              <div className="flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400 flex-wrap">
                <span className="font-medium">–ó–∞–¥–∞—á–∞: {testimonials[currentIndex].task}</span>
                {testimonials[currentIndex].earnings && (
                  <span className="px-3 py-1 bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-400 rounded-full font-semibold">
                    üí∞ {testimonials[currentIndex].earnings}
                  </span>
                )}
                {testimonials[currentIndex].timeframe && (
                  <span className="px-3 py-1 bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-400 rounded-full">
                    ‚è±Ô∏è {testimonials[currentIndex].timeframe}
                  </span>
                )}
              </div>
            </div>
          </div>

          {/* Navigation arrows */}
          <button
            onClick={goToPrev}
            className="absolute left-0 top-1/2 -translate-y-1/2 -translate-x-4 sm:-translate-x-6 w-12 h-12 bg-white dark:bg-gray-800 rounded-full shadow-lg border border-gray-200 dark:border-gray-700 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors z-20"
            aria-label="Previous testimonial"
          >
            <ChevronLeft className="h-6 w-6 text-gray-600 dark:text-gray-400" />
          </button>
          <button
            onClick={goToNext}
            className="absolute right-0 top-1/2 -translate-y-1/2 translate-x-4 sm:translate-x-6 w-12 h-12 bg-white dark:bg-gray-800 rounded-full shadow-lg border border-gray-200 dark:border-gray-700 flex items-center justify-center hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors z-20"
            aria-label="Next testimonial"
          >
            <ChevronRight className="h-6 w-6 text-gray-600 dark:text-gray-400" />
          </button>

          {/* Dots indicator */}
          <div className="flex justify-center gap-2 mt-6">
            {testimonials.map((_, index) => (
              <button
                key={index}
                onClick={() => goToSlide(index)}
                className={`transition-all ${
                  index === currentIndex
                    ? 'w-8 h-2 bg-blue-600'
                    : 'w-2 h-2 bg-gray-300 dark:bg-gray-600 hover:bg-gray-400'
                } rounded-full`}
                aria-label={`Go to testimonial ${index + 1}`}
              />
            ))}
          </div>
        </div>

        {/* Stats Grid */}
        <div className="grid grid-cols-2 md:grid-cols-4 gap-4 sm:gap-6 mb-12">
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 text-center">
            <div className="text-3xl sm:text-4xl font-bold text-blue-600 dark:text-blue-400 mb-2">
              10,000+
            </div>
            <div className="text-sm text-gray-600 dark:text-gray-400">
              –ó–∞–≤—ä—Ä—à–µ–Ω–∏ –∑–∞–¥–∞—á–∏
            </div>
          </div>
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 text-center">
            <div className="text-3xl sm:text-4xl font-bold text-green-600 dark:text-green-400 mb-2">
              5,000+
            </div>
            <div className="text-sm text-gray-600 dark:text-gray-400">
              –ê–∫—Ç–∏–≤–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏
            </div>
          </div>
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 text-center">
            <div className="text-3xl sm:text-4xl font-bold text-yellow-600 dark:text-yellow-400 mb-2">
              4.8
            </div>
            <div className="text-sm text-gray-600 dark:text-gray-400">
              –°—Ä–µ–¥–µ–Ω —Ä–µ–π—Ç–∏–Ω–≥
            </div>
          </div>
          <div className="bg-white dark:bg-gray-800 rounded-xl shadow-sm border border-gray-200 dark:border-gray-700 p-6 text-center">
            <div className="text-3xl sm:text-4xl font-bold text-purple-600 dark:text-purple-400 mb-2">
              98%
            </div>
            <div className="text-sm text-gray-600 dark:text-gray-400">
              –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–µ–Ω–∏ –∫–ª–∏–µ–Ω—Ç–∏
            </div>
          </div>
        </div>

        {/* CTA Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center items-center">
          <button
            onClick={() => router.push('/post-task')}
            className="w-full sm:w-auto px-8 py-4 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-colors font-semibold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all"
          >
            üìù –ü—É–±–ª–∏–∫—É–≤–∞–π –æ–±—è–≤–∞ –±–µ–∑–ø–ª–∞—Ç–Ω–æ
          </button>
          <button
            onClick={() => router.push('/tasks')}
            className="w-full sm:w-auto px-8 py-4 bg-green-600 text-white rounded-xl hover:bg-green-700 transition-colors font-semibold text-lg shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 transition-all"
          >
            üí∞ –ó–∞–ø–æ—á–Ω–∏ –¥–∞ –ø–µ—á–µ–ª–∏—à –¥–Ω–µ—Å
          </button>
        </div>

        {/* Trust badges */}
        <div className="mt-12 flex flex-wrap justify-center items-center gap-6 text-sm text-gray-500 dark:text-gray-400">
          <div className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-600" />
            <span>100% –ë–µ–∑–ø–ª–∞—Ç–Ω–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è</span>
          </div>
          <div className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-600" />
            <span>–ë–µ–∑ —Å–∫—Ä–∏—Ç–∏ —Ç–∞–∫—Å–∏</span>
          </div>
          <div className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-600" />
            <span>–í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–∞–Ω–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª–∏</span>
          </div>
          <div className="flex items-center gap-2">
            <CheckCircle className="h-5 w-5 text-green-600" />
            <span>–°–∏–≥—É—Ä–Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞</span>
          </div>
        </div>
      </div>
    </section>
  )
}

